from aiogram.utils.markdown import hlink
from utils.database import api
from aiogram import Bot
from config import TOKEN
from aiogram.enums.parse_mode import ParseMode
from datetime import datetime

bot = Bot(token=TOKEN, parse_mode=ParseMode.MARKDOWN)

async def start(name, user_id):
    return(
        "–Ø —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ *–°–¢–û–ü-–°–õ–û–í–ê–ú–ò*. –¢–∞–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —è *—É–¥–∞–ª—è—é*, –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –º–æ–≥—É *–æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ –±–∞–Ω*, –ª–∏–±–æ –ø—Ä–æ—Å—Ç–æ *–∑–∞–≥–ª—É—à–∞—Ç—å*. –ó–∞ —Å–æ–±–æ–π —É–¥–∞–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏—è!\n\n"
        "üëáüèª –í—ã–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è –µ—ë –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
    )

async def expired():
    return(
        f"üöÄ –£ —Ç–µ–±—è –Ω–µ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥, –ª–∏–±–æ –æ–ø–ª–∞—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É"
    )

async def subpay(step, merchant=0, plan=0):
    if step == "plans":
        return(
            f"üî∂ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω"
        )
    if step == "merchant":
        return(
            f"üî∂ –í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
        )
    if step == "link":
        merchant = int(merchant)
        plan = int(plan)
        if merchant == 1:
            merchant = "–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –†–§"
        if merchant == 2:
            merchant = "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞"
        if plan == 1:
            plan = "[390—Ä.] 1 –º–µ—Å—è—Ü"
        if plan == 2:
            plan = "[990—Ä.] 3 –º–µ—Å—è—Ü–∞"
        if plan == 3:
            plan = "[1740—Ä.] 6 –º–µ—Å—è—Ü–µ–≤"
        if plan == 4:
            plan = "[2940—Ä.] 12 –º–µ—Å—è—Ü–µ–≤"
        return("üî∂ –û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É\n\n"
               f"–¢–∞—Ä–∏—Ñ: *{plan}*\n"
               f"–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã: *{merchant}*\n\n"
               f"–í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É: *20 –º–∏–Ω—É—Ç*\n"
               "–ü–ª–∞—Ç–µ–∂–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
               )

async def trial(user_id, chat_id):
    result = await api.set_trial(user_id, chat_id)
    return(
        f"‚úÖ –ü—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 14 –¥–Ω–µ–π —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!\n\n"
        f"–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: *{result.strftime('%d.%m.%Y')}*"
    )

async def hello():
    return(
        f"‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É!\n\n"
        "–¢–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–µ–Ω –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º\n\n"
        "–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üôÇ"
    )

async def chat(id, list=1):
    date = await api.get_subdate(id)
    chat = await api.get_chat(id)
    try:
        chat_data = await bot.get_chat(chat[1])
    except:
        await api.remove_chat(id)
        return False
    # words = await api.get_words(chat[1], list)
    # list = []
    # for word in words:
    #     list.append(word[0])
    return(
        f"üî∂ –í–∞—à–∞ –≥—Ä—É–ø–ø–∞\n\n"
        f"*{chat_data.full_name}* ({chat[1]})\n\n"
        f"–ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –¥–æ: *{date.strftime('%d.%m.%Y')}*\n\n"
        # "–¢–µ–∫—É—â–∏–µ —Å—Ç–æ–ø —Å–ª–æ–≤–∞:\n"
        # f"*{', '.join(list)}*\n\n"
        "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ *–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –º–µ–Ω—é –Ω–∏–∂–µ*. –ï—Å–ª–∏ *–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—èc–Ω–µ–Ω–∏–µ*, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ‚ùì"
    )

async def whitelist(id):
    chat = await api.get_chat(id)
    chat_data = await bot.get_chat(chat[1])
    return(
        f"üî∂ –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã\n\n"
        f"*{chat_data.full_name}* [[{chat[1]}]]\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è, *–≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*"
    )

async def gmt(id):
    chat = await api.get_chat(id)
    if chat[21] > 0:
        timezone = f"+{chat[21]}"
    else:
        timezone = chat[21]
    return(
        f"üî∂ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞\n"
        f"–°–µ–π—á–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—è—Å: UTC {timezone}\n\n"
        "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ\n\n```–ü—Ä–∏–º–µ—Ä—ã:\n+3\n-2\n+0```"
    )

async def time(id):
    chat = await api.get_chat(id)
    from_obj = datetime.strptime(str(chat[22]), "%H:%M:%S")
    fr = from_obj.strftime("%H:%M")
    to_obj = datetime.strptime(str(chat[23]), "%H:%M:%S")
    to = to_obj.strftime("%H:%M")
    return(
        f"üî∂ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞\n"
        f"–°–µ–π—á–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: –° {fr} –¥–æ {to}\n\n"
        "–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–∏–∂–µ\n\n```–ü—Ä–∏–º–µ—Ä:\n00:00 07:00```"
    )

async def whitelist_plans():
    return(
        f"üî∂ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–µ *–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤* –±—É–¥–µ—Ç *–¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é*?"
    )

async def whitelist_user():
    return(
        f"üî∂ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫\n\n"
        "–ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å"
    )

async def whitelist_info(wl_id):
    whitelist = await api.get_whitelist_by_id(wl_id)
    chat = await api.get_chat_by_id(whitelist[1])
    chat_data = await bot.get_chat(chat[1])
    return(
        f"üî∂ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞\n\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @*{whitelist[3]}* ({whitelist[2]})\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤: *{whitelist[4]}* –æ—Å—Ç–∞–ª–æ—Å—å\n"
        f"–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ: *{whitelist[5].strftime('%d.%m.%Y')}*"
    )

async def words(type):
    if type == "add":
        return("üî∏ –ü—Ä–∏—à–ª–∏—Ç–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º, —á—Ç–æ–±—ã —è –º–æ–≥ –∏—Ö *–¥–æ–±–∞–≤–∏—Ç—å*\n\n"
        "–°–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ—á–∫—É, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º –∏–∑ 3—Ö —Å–∏–º–≤–æ–ª–æ–≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n\n"
        "```–ø—Ä–æ–¥–∞–º, –≥–∞—Ä–∞–∂, –∫—É–ø–ª—é, –¥–µ–Ω—å–≥–∏```"
        )
    if type == "edit":
        return("üî∏ –ü—Ä–∏—à–ª–∏—Ç–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º, —á—Ç–æ–±—ã —è –º–æ–≥ –∏—Ö *–∑–∞–º–µ–Ω–∏—Ç—å*\n\n"
        "–°–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ—á–∫—É, —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º –∏–∑ 3—Ö —Å–∏–º–≤–æ–ª–æ–≤, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä:\n\n"
        "```–ø—Ä–æ–¥–∞–º, –≥–∞—Ä–∞–∂, –∫—É–ø–ª—é, –¥–µ–Ω—å–≥–∏```"
        )

async def help(type):
    match type:
        case "toggle":
            return(
                "üî∏ –í–∫–ª—é—á–µ–Ω –∏–ª–∏ –≤—ã–∫–ª—é—á–µ–Ω\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –≤–∫–ª—é—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–æ–ø —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–æ—Ç. –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω - —Ä–∞–±–æ—Ç–∞ –ø–æ –Ω–µ–º—É –±—É–¥–µ—Ç –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞."
            )
        case "words":
            return(
                "üî∏ –î–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–æ–ø-—Å–ª–æ–≤–∞\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –î–û–ë–ê–í–ò–¢–¨ —Å—Ç–æ–ø —Å–ª–æ–≤–∞, –ø—Ä–∏ —ç—Ç–æ–º –≤—Å–µ —Å–ª–æ–≤–∞ –±—É–¥—É—Ç –î–û–ë–ê–í–õ–ï–ù–´ –∫ —Ç–µ–∫—É—â–∏–º.\n\n–ü—Ä–∏ –ò–ó–ú–ï–ù–ï–ù–ò–ò - —Å—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç —Å—Ç–µ—Ä—Ç, –∞ –Ω–æ–≤—ã–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω"
            )
        case "mode":
            return(
                "üî∏ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã\n\n"
                "–ò–°–ö–ê–¢–¨ –¢–û–ß–ù–û - –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á—å-–≤-—Ç–æ—á—å —Å—Ö–æ–¥—è—Ç—Å—è —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –≤–∞–º–∏ —Å–ª–æ–≤–∞–º–∏\n\n–ò–°–ö–ê–¢–¨ –ß–ê–°–¢–¨ - –±–æ—Ç –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å —Å–ª–æ–≤–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–∞–º–∏ —Å–ª–æ–≤–∞"
            )
        case "action":
            return(
                "üî∏ –ß—Ç–æ –¥–µ–ª–∞–µ–º —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ:\n"
                "‚Äî —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n"
                "‚Äî —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –±–∞–Ω–∏—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è\n"
                "‚Äî —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≥–ª—É—à–∞—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤\n"
            )
        case "notify":
            return(
                "üî∏ –û—Ç—á–µ—Ç—ã\n\n"
                "–ë–æ—Ç –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç—á–µ—Ç –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–≤–ª–∞–¥–µ–ª—å—Ü—É) –≥—Ä—É–ø–ø—ã –≤ –±–æ—Ç–µ."
            )
        case "whitelist":
            return(
                "üî∏ –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫\n\n"
                "–ë–æ—Ç –Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –¥–æ–±–∞–≤–∏—Ç–µ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫"
            )
        case "add":
            return(
                "üî∏ –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞\n\n"
                "–ü—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤—ã–¥–∞–π—Ç–µ –µ–º—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–∞—Ç–∞!\n\n–í –∏–Ω–æ–º —Å–ª—É—á–∞–µ –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å, –∏ –ø—Ä–∏–π–¥–µ—Ç—Å—è –¥–æ–±–∞–≤–ª—è—Ç—å –µ–≥–æ –∑–∞–Ω–æ–≤–æ!"
            )
        case "filter":
            return(
                "üî∏ –§–∏–ª—å—Ç—Ä –∏–º—ë–Ω\n\n"
                "–ü—Ä–∏ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É, –±–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∏–∂–µ"
            )
        case "night":
            return(
                "üî∏ –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º\n\n"
                "–ë–æ—Ç –∑–∞–ø—Ä–µ—Ç–∏—Ç –≤—Å–µ–º –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É —á–∞—Å–æ–≤–æ–º—É –ø–æ—è—Å—É, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è"
            )
        case "inviting":
            return(
                "üî∏ –ê–Ω—Ç–∏-–∏–Ω–≤–∞–π—Ç–∏–Ω–≥\n\n"
                "–ë–æ—Ç —É–≤–µ–¥–æ–º–∏—Ç –≤–∞—Å –æ –±–æ–ª—å—à–æ–º –Ω–∞–ø–ª—ã–≤–µ –≤—Å—Ç—É–ø–∞—é—â–∏—Ö –ª—é–¥–µ–π, –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è"
            )
        case "antiflood":
            return(
                "üî∏ –ê–Ω—Ç–∏-—Ñ–ª—É–¥\n\n"
                "–ë–æ—Ç –Ω–∞–∫–∞–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ—à–∏–ª –ø–æ—Ñ–ª—É–¥–∏—Ç—å, –º–µ—Ç–æ–¥ –Ω–∞–∫–∞–∑–∞–Ω–∏—è –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤—ã—à–µ"
            )
